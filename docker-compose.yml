services:
  nginx:
    image: nginx:alpine
    container_name: mcp-nginx
    ports:
      - "18443:443"
      - "8443:8443"
      - "8001:8001"
      - "18080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certificates:/etc/nginx/certs:ro
    depends_on:
      - oauth
      - mcp
    restart: unless-stopped
    networks:
      - mcp-network

  oauth:
    build:
      context: .
      dockerfile: Dockerfile
      target: oauth
    container_name: mcp-oauth
    ports:
      - "8080:8080"
    environment:
      # OAuth Proxy now uses Azure configuration - legacy variables removed
      - OAUTH_ISSUER_URL=${OAUTH_ISSUER_URL:-https://localhost:8443}
      - CLIENT_ID=${CLIENT_ID:-mcp-secure-client}
      - CLIENT_SECRET=${CLIENT_SECRET:-dev-client-secret}
    volumes:
      - ./keys:/app/keys:ro
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mcp:
    build:
      context: .
      dockerfile: Dockerfile
      target: mcp
    container_name: mcp-server
    ports:
      - "8000:8000"
    environment:
      - MCP_SERVER_HOST=${MCP_SERVER_HOST:-0.0.0.0}
      - MCP_SERVER_PORT=${MCP_SERVER_PORT:-8000}
      - LLM_PROVIDER=${LLM_PROVIDER:-ollama}
      - OAUTH_ISSUER_URL=${OAUTH_ISSUER_URL:-https://localhost:8443}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-5-nano}
      # - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - REDIS_URL=${REDIS_URL:-redis://redis:6379}
    volumes:
      - ./keys:/app/keys:ro
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:8-alpine
    container_name: mcp-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - mcp-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  mcp-network:
    driver: bridge

volumes:
  redis_data:
